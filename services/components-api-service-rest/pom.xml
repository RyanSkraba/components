<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.talend.daikon</groupId>
		<artifactId>service-parent</artifactId>
		<version>0.17.0-SNAPSHOT</version>
		<relativePath></relativePath>
	</parent>

	<groupId>org.talend.components</groupId>
	<artifactId>components-api-service-rest</artifactId>
	<version>0.19.0-SNAPSHOT</version>

	<name>Component REST API</name>
	<properties>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<daikon.version>0.17.0-SNAPSHOT</daikon.version>
		<!-- Used for Docker images name -->
		<git_branch>local</git_branch>
		<talend_docker_registry>registry.datapwn.com</talend_docker_registry>
	</properties>

	<dependencies>

		<!-- spring dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- added explicytly cause it is in the scope provided by the parent -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- talend dependencies -->
		<dependency>
			<groupId>org.talend.components</groupId>
			<artifactId>components-api-service-spi</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.talend.components</groupId>
			<artifactId>components-common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>biz.aQute.bnd</groupId>
			<artifactId>annotation</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.url</groupId>
			<artifactId>pax-url-aether</artifactId>
			<version>2.4.7</version>
		</dependency>
		<!-- provides layouts for logging. It is not really compile dependency, but rather runtime -->
		<dependency>
			<groupId>org.talend.daikon</groupId>
			<artifactId>logging-event-layout</artifactId>
			<version>0.17.0-SNAPSHOT</version>
		</dependency>

		<!-- tests dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.talend.components</groupId>
			<artifactId>components-api-service-common</artifactId>
			<version>${project.version}</version>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.6.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.talend.components</groupId>
			<artifactId>components-jdbc-runtime</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.talend.libraries</groupId>
			<artifactId>mysql-connector-java-5.1.30-bin</artifactId>
			<version>6.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.3.3.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.talend.daikon</groupId>
			<artifactId>daikon</artifactId>
			<version>${daikon.version}</version>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.talend.daikon</groupId>
			<artifactId>daikon-spring-utils</artifactId>
			<version>${daikon.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Drivers needed for embedded database -->
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.12.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.12.1.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<!-- dependencyManagement block may be added here and components bom may 
		be included to manage versions -->
	<build>
		<plugins>
			<plugin>
				<!-- prevent spring plugin to create a big startable jar -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- create the jar only with rest service classes, excluding configuration files -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classesDirectory>${project.build.outputDirectory}</classesDirectory>
							<excludes>
								<exclude>**/application*.properties</exclude>
								<exclude>**/logback-spring.xml</exclude>
								<exclude>**/settings.xml</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- generate the maven repo for the service app -->
				<artifactId>maven-invoker-plugin</artifactId>
				<version>2.0.1-TALEND</version>
				<configuration>
					<localRepositoryPath>target/mvn-repo</localRepositoryPath>
		            <onlyResolveDependencies>true</onlyResolveDependencies>
				</configuration>
				<executions>
					<execution>
						<id>generate-service-maven-repo</id>
						<phase>package</phase>
						<goals>
							<goal>install</goal>
						</goals>
						<configuration>
							<pomIncludes>
								<pomInclude>*/pom.xml</pomInclude>
							</pomIncludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<!-- this lib is exactly the same as the default jar but it keept here 
							because all component tests depends on it. -->
						<id>lib-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>lib</classifier>
							<classesDirectory>${project.build.outputDirectory}</classesDirectory>
							<excludes>
								<exclude>**/application*.properties</exclude>
								<exclude>**/logback-spring.xml</exclude>
								<exclude>**/settings.xml</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<!-- generate test jar, I am not sure it enven used -->
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.webcohesion.enunciate</groupId>
				<artifactId>enunciate-maven-plugin</artifactId>
				<configuration>
					<skipEnunciate>true</skipEnunciate>
				</configuration>
			</plugin>
			<plugin>
				<!-- create a class path with all the compile scope dependencies of this 
					pom using the local maven repository -->
				<groupId>com.github.veithen.alta</groupId>
				<artifactId>alta-maven-plugin</artifactId>
				<version>0.5.4-TALEND</version>
				<executions>
					<execution>
						<id>generate-components-linux-classpath</id>
						<goals>
							<goal>generate-properties</goal>
						</goals>
						<configuration>
							<name>classpath.linux</name>
							<value>.m2/%mavenPath%</value>
							<separator>:</separator>
							<dependencySet>
								<scope>compile</scope>
								<useProjectArtifact>true</useProjectArtifact>
							</dependencySet>
						</configuration>
					</execution>
					<execution>
						<id>generate-components-windows-classpath</id>
						<goals>
							<goal>generate-properties</goal>
						</goals>
						<configuration>
							<name>classpath.windows</name>
							<value>.m2\%mavenPathWindows%</value>
							<separator>;</separator>
							<dependencySet>
								<scope>compile</scope>
								<useProjectArtifact>true</useProjectArtifact>
							</dependencySet>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<!-- creates the simple bare service zip -->
						<id>no-arch-package</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>assembly/no-arch.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
					<execution>
						<!-- creates config zip package to be used by any other packaging modules such as as all components -->
						<id>config-package</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>assembly/config.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- removes jdbc runtime jar from the integration tests classpath -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<classpathDependencyExcludes>
								<classpathDependencyExclude>org.talend.components:components-jdbc-runtime</classpathDependencyExclude>
							</classpathDependencyExcludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<resources>
			<resource>
				<!-- This enable maven defined variables in banner.txt as ${project.version} and application.properties-->
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
	<profiles>
		<profile>
			<id>skipTestRun</id>
			<activation>
				<property>
					<name>skipTests</name>
				</property>
			</activation>
			<properties>
				<really.skip.tests>true</really.skip.tests>
			</properties>
		</profile>
		<profile>
			<id>skipTestItRun</id>
			<activation>
				<property>
					<name>skipITs</name>
				</property>
			</activation>
			<properties>
				<really.skip.tests>true</really.skip.tests>
			</properties>
		</profile>
		<profile>
			<id>docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.20.1</version>
						<executions>
							<execution>
								<id>start</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<autoPull>once</autoPull>
									<images>
										<image>
											<name>${talend_docker_registry}/talend/tcomp-${project.artifactId}-${git_branch}</name>
											<build>
												<from>${talend_docker_registry}/talend/microservices-base:1.latest</from>
												<tags>
													<tag>${docker.version}</tag>
												</tags>
												<ports>
													<port>8989</port>
												</ports>
												<cmd>
													<exec>
														<arg>/maven/start.sh</arg>
													</exec>
												</cmd>
												<runCmds>
													<run>apk add --no-cache libc6-compat</run>
													<run>chmod +x /maven/start.sh</run>
												</runCmds>
												<assembly><!-- includes the artifact generated by the current 
														pom -->
													<descriptor>${project.basedir}/assembly/no-arch.xml</descriptor>
												</assembly>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>releases</id>
			<url>https://artifacts-oss.talend.com/nexus/content/repositories/TalendOpenSourceRelease/</url>
		</repository>
		<repository>
			<id>talend_nexus</id>
			<name>snapshots</name>
			<url>https://artifacts-oss.talend.com/nexus/content/repositories/TalendOpenSourceSnapshot/</url>
		</repository>
		<repository>
			<id>talend-update</id>
			<url>https://talend-update.talend.com/nexus/content/repositories/libraries/</url>
		</repository>
	</repositories>
</project>
